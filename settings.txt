You will need to fill out this file for hand in. 

The bellow is just an example, feel free to disregard this documents contents.


Your final settings.txt will look something like this when you are finished:

/////////////////////////////////

Wallpaper 1:

//water paramiters
  //water 1 (darker)
let draw1Water = (false);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (false); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (1.1); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [8, 189, 162]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (false); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (false);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (true);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (true);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 100
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 275;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(81, 240, 227);
}

/////////////////////////////////

Wallpaper 2:

//water paramiters
  //water 1 (darker)
let draw1Water = (false);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (false); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [8, 189, 162]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (false);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 100
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(81, 240, 227);
}

//////////////////////////////////

Wallpaper 3

//water paramiters
  //water 1 (darker)
let draw1Water = (false);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (false); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [8, 189, 162]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (false);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 100
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 250;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(81, 240, 227);
}

//////////////////////////////////

Wallpaper 4

//water paramiters
  //water 1 (darker)
let draw1Water = (false);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (false); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [50, 143, 78]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (true);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (false);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 137.5
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 275;
  pWallpaper.grid_settings.cell_height = 275;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(81, 240, 227)
}

//////////////////////////////////

Wallpaper 5

//water paramiters
  //water 1 (darker)
let draw1Water = (true);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (true); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (1); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [255]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (false); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (true);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 100
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(50,204,209);
}

//////////////////////////////////

Wallpaper 6

//water paramiters
  //water 1 (darker)
let draw1Water = (true);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (true); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [50, 143, 78]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (true);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 0
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(50,204,209);
}

//////////////////////////////////

Wallpaper 7

//water paramiters
  //water 1 (darker)
let draw1Water = (true);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (true); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (true);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [50, 143, 78]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (true);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (true);
    //middle layer
let middleFlowerPetal = (true);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (true);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 0
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(50,204,209);
}

//////////////////////////////////

Wallpaper 8

//water paramiters
  //water 1 (darker)
let draw1Water = (true);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (true); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (false);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [50, 143, 78]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (true);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (true);
    //middle layer
let middleFlowerPetal = (false);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (false);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 0
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  //pWallpaper.output_mode(GRID_WALLPAPER); 
  pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(50,204,209);
}

//////////////////////////////////

Wallpaper 9: 

//water paramiters
  //water 1 (darker)
let draw1Water = (true);//water leyer 1
let water1Colour = [46, 186, 193]; //9, 197, 222 //37, 207, 245 //light varient: 56, 197, 200 //dark varient: 46, 186, 193
let water1Thickness = (5); //stroke thickness of water layer 1 line
  //water 2 (lighter)
let draw2Water = (true); //togglre drawing water layer 2
let water2Colour = [73, 224, 228]; //9, 183, 222 //light varient: 131, 245, 245 //dark varient: 73, 224, 228
let water2Thickness = (5); //stroke thickness of water layer 2 line
  //water offset
let waterOffsetX = (275); //X offset between water layer 1 and water layer 2
let waterOffsetY = (0); //Y offset between water layer 1 and water layer 2
let waterRotation = (90); //rotation difference between water layer 1 and water layer 2


// frog paramiters
let drawFrog = (false);
let frogSize = (0.88); //change overall frog size
let frogColour = [116, 228, 157]; //48, 227, 122 - 116, 228, 144 -best: 116, 228, 157
let frogOutlineColour = [73, 172, 103]; //nice green: 73, 172, 103
let frogOutlineThickness = (1); // -best: 1
let drawBackline = (true); //toggles wether frog has 2nd outline that goes around entire frog (like sticker edge)
let frogBacklineColour = [50, 143, 78]; // dark green: 50, 143, 78 //drak turquoise: 8, 189, 162 // lighhter tourqiouse 74, 232, 206
let frogBacklineThickness = (10); // to be visible must be bigger than "frogOutlineThickness" -best 5
let frogOriginX = (100); // Xpos of frog centre
let frogOriginY = (100); // Ypos of frog centre
let frogWidth = (100); //width of frog body
let mouthHeight = (-30);// is added to frogOriginY (more negative=higher and more postive=lower) -best -30
let UwU = (false); //changes mouth shape
let eyeSize = (26); //size of white eye part -min 20 or else goofy  -sparkle: >25
let eyelidSize = (eyeSize+5); //size of green circle around eyes (change number to chang difference/space between eyeLid and eye (white part)) -best:5
let eyepupilSize = (eyeSize-5); //size of pupil -best: 5 smaller than eyeSize -for sparkle: total>20 -scared: make 15smaller than eyeSize
let eyeOffsetX = (25); // X distance of eyes from centre  -best 25 -goofy: 15
let eyeOffsetY = (43); // Y distance aka height of eyes from centre  -best: 43


//lilly paramiters
let drawLilly = (true); //toggle wether lillyPad is drawn
let lillySize = (1); //changes overall lillyPad size
let lillyColour = [116,228,157]; 
let lillyBacklineColour = [8, 189, 162];
let lillyBacklineTthickness = (5); //must be bigger then "lillyOutlineThickness" to be visible
let lillyOutlineColour = [73, 172, 103];
let lillyOutlineTthickness = (1.5); // -best: 1.5
let lillyWidth = (75); // length across X axis -best: 75
let lillyHeight = (50); // length across Y axis -best: 50
let lillyCutSize = (30); //size of the "cut" in lillypad (in degrees) -best: 30
  //lillyPad 1 (top left)
let lilly1X = (39.5); // x postion of lillyPad 1 -best: 39.5
let lilly1Y = (27+50); // y postion of lillyPad 1 -best: 27
let lilly1Cut = (55); //changes place of "cut" in lillyPad 1 -best: 55
  //lillyPad 2 (top right)
let lilly2X = (160.5); // x postion of lillyPad 2 -best: 160.5
let lilly2Y = (27); // y postion of lillyPad 2 -best: 27
let lilly2Cut = (155); //changes place of "cut" in lillyPad 2 -best: 155
  //lillyPad 3 (bottom left)
let lilly3X = (39.5); // x postion of lillyPad 3 -best: 39.5
let lilly3Y = (173); // y postion of lillyPad 3 -best: 173
let lilly3Cut = (325); //changes place of "cut" in lillyPad 3 -best: 325
  //lillyPad 4 (bottom right)
let lilly4X = (160.5); // x postion of lillyPad 4 -best: 160.5
let lilly4Y = (173-50); // y postion of lillyPad 4 -best: 173
let lilly4Cut = (235); //changes place of "cut" in lillyPad 4 -best: 235


//flower paramiters
  //flower centre
let drawFlower = (false);
let flowerSize = (1.5); //changes size of flower
let flowerCentreColour = [235, 225, 52]; //235, 225, 52
let flowerCentreOutlineColour = [240, 193, 53]; //235, 214, 52 //232, 202, 51
let flowerCentreOutlineThickness = (1);
let flowerCentreWidth = (15);
let flowerCentreHeight = (15);
  //flower petals
let flowerPetalColour = [237, 88, 217]; //211, 52, 235
let flowerPetalOutlineColour = [212, 74, 205]; //180, 52, 235
let flowerPetalOutlineThickness = (1);
let flowerPetalLength = (20); //usually labled width (for 1st petal)
let flowerPetalWidth = (10); //usually labled height (for 1st petal)
let flowePetalOffset = (7.5);
let flowerPetal2Colour = [245, 135, 230]; //lighter pink

let CoolFlowerPetal = (false); //currently broken
let layerdFlowerPetal = (true);
    //middle layer
let middleFlowerPetal = (false);
let flowerPetal3Colour = [245, 162, 233]; //245, 154, 232
let flowerPetal4Colour = [245, 198, 238];
    //back layer
let backFlowerPetal = (false);
let flowerPetal5Colour = [247, 215, 243];
let flowerPetal6Colour = [247, 228, 245];
  //flower 1
let drawFlower1 = (true);
let flower1X = (0);
let flower1Y = (0);
  //flower 2
let drawFlower2 = (true);
let flower2X = (0);
let flower2Y = (200);
  //flower 3
let drawFlower3 = (true);
let flower3X = (200);
let flower3Y = (0);
  //flower 4
let drawFlower4 = (true);
let flower4X = (200);
let flower4Y = (200);


//cheese paramiters
let drawCheese = (false);
let cheeseColour = [237, 206, 52]; // og colour: 237, 206, 52
let holeSize = (30); // og 30
let holeColour = [237, 191, 52] ; // og colour: 237, 197, 52 // mouldy colour 150,170,154 //darker but orangy 237, 191, 52 //235, 191, 35 //235, 197, 26
let holelineThickness = (2); 
let cheeseOutlineColour = [235, 170, 42]; // og colour: 237, 191, 52 // darker 235, 170, 42 //235, 181, 19
let cheeseOutlineThickness = (2); // og 2
let cheeseBacklineColour = [237, 189, 47]; //og 0 //dark orange 227, 178, 32 //light yellow 245, 228, 142
let cheeseBacklineThickness = (20); // to be visible must be bigger than "outlineThickness"
  //cheese positions
  //main cheese
let mainCheese = (false);
let mainCheeseSize = (1);
let mainCheeseX = (27.5); //move cheese X axis (for left corner 0,0) //27.5 for centre
let mainCheeseY = (75); //move cheese y axis (for left corner 0,0)  //75 for centre
  //cheese 1 
let drawCheese1 = (true);
let cheese1Size = (0.5);
let cheese1X = (-30);
let cheese1Y = (-15);
  //cheese 2
let drawCheese2 = (true);
let cheese2Size = (0.5);
let cheese2X = (-30);
let cheese2Y = (185);
  //cheese 3
let drawCheese3 = (false);
let cheese3Size = (0.5);
let cheese3X = (200);
let cheese3Y = (0);
  //cheese 4
let drawCheese4 = (false);
let cheese4Size = (0.5);
let cheese4X = (200);
let cheese4Y = (200);

//frog&cheese paramiters
let drawFrogCheese = (false);


//added if statements:
  //if (eyepupilSize > 20) //creates eye sparkle
  //if (UwU) //changes mouth from :3 to :)
  //if (drawFrog) //changes things in cheese function if frog is active (frog holds cheese)
  //if (drawBackline) //draws backline
  //if (drawCheese) //changes things in frog function if cheese is active (cheese shrinks and moves to frog)
  //if (layerdFlowerPetal) which contains if (backFlowerPetal) and if (middleFlowerPetal) //changes how many "petal layers" flowers have


let RowOffset = 0
//---Only Paramiters Above-----------


function setup_wallpaper(pWallpaper) {
  //pWallpaper.output_mode(DEVELOP_GLYPH);
  pWallpaper.output_mode(GRID_WALLPAPER); 
  //pWallpaper.output_mode(GLIDE_WALLPAPER); 
  
  pWallpaper.resolution(FIT_TO_SCREEN);
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  pWallpaper.grid_settings.row_offset  = (RowOffset); //nice: 100
}

function wallpaper_background() {
  background(50,204,209);
}